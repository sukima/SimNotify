- title "Session"
- if !@event.submitted? && !@event.approved?
  %p.notification This event has not been submitted for approval yet.
- if @event.submitted? && !@event.approved?
  %p.notification This event has been submitted and is pending approval.
- if @event.approved?
  %p.notification This event has been approved.
- if @event.priority_request?
  %p.warning WARNING: Session is only #{distance_of_time_in_words_to_now(@event.start_time)} from now!
%h2
  Session: #{h @event.title}
- if !@event.facility.nil?
  %p
    %strong Facility:
    =h @event.facility.name
%p
  %strong Location:
  = h @event.location
%p
  %strong Benefit:
  = h @event.benefit
%p
  %strong Notes:
  = h @event.notes
%p
  %strong Start Time:
  = dt @event.start_time
%p
  %strong End Time:
  = dt @event.end_time
- if @event.live_in
  %p
    %strong Equipment is there for an extended stay
%p
  %strong Instructor:
  = link_to h(@event.instructor.name), @event.instructor
- if !@event.instructors.empty?
  %p
    %strong Other Instructors:
    = @event.instructors.map(&:name).to_sentence
- if @event.technician.nil?
  %p No technician has been assigned to this session.
- else
  %p
    %strong Technician:
    = link_to h(@event.technician.name), @event.technician
%p
  %strong Created at:
  = dt @event.created_at
%p
  %strong Last Updated:
  = dt @event.updated_at
#scenarios
  %h3 Scenarios
  .box= link_to "Add a scenario", new_event_scenario_path(@event)
  - if @event.scenarios.empty?
    .box No scenarios defined yet!
  - else
    - @event.scenarios.each_with_index do |scenario, index|
      .box.border
        %p.scenario-title
          %span
            = (index+1).ordinalize
            scenario: [#{link_to "Edit", edit_scenario_path(scenario)}]
        %p.scenario-description= h scenario.description
        - unless scenario.manikin.nil?
          %p
            %strong Manikin:
            = h scenario.manikin.name_and_type
        - else
          %p
            %strong This scenario does not use any manikins.
        - unless scenario.flags_as_strings.empty?
          %p.flags-list
            %strong Support Needs:
            = scenario.flags_as_strings.to_sentence
#assets
  %h3 Attached Files
  .box= link_to "Attach a file", new_event_asset_path(@event)
  - if @event.assets.empty?
    .box No files attached.
  - else
    %ul.hlist
      - @event.assets.each do |asset|
        %li
          %div.icon-item
            %a{:href => asset.session_asset.url}
              = asset_image_tag(asset)
              %div
                = asset.session_asset_file_name
            = link_icon_to "trash", t(:destroy),
              delete_event_asset_path(@event, asset),
              :confirm => t(:destroy_item_confirm, :item => asset.session_asset_file_name)
.clear
%p
  = link_to t(:edit), edit_event_path(@event)
  | #{link_to_confirm t(:destroy), delete_event_path(@event), :confirm => 'Are you sure?'}
  - if @current_instructor.admin?
    | #{link_to "View All Sessions", events_path}
  - if !@event.submitted?
    | #{link_to_event_submit t(:submit), @event}
  - else
    | #{link_to_event_revoke t(:revoke), @event}
